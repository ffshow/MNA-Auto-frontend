{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server.",
        "title": "MNA-Automobile Swagger API",
        "termsOfService": "http://mna-auto.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.mna-auto.io/support",
            "email": "support@mna-auto.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/account": {
            "post": {
                "description": "Register account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "description": "Register account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAccountModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AccountModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/account/{id}": {
            "get": {
                "description": "Get account by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get account by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AccountModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Update a account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Register account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AccountModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AccountModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/account_import": {
            "post": {
                "description": "Register account (useful for importing data)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Create many account",
                "parameters": [
                    {
                        "description": "Register account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AccountModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CreateAccountModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/account_list": {
            "get": {
                "description": "List account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "List account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order",
                        "name": "descending",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AccountModel"
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/garage": {
            "post": {
                "description": "Register garage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "garage"
                ],
                "summary": "Create a new garage",
                "parameters": [
                    {
                        "description": "Register garage",
                        "name": "garage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateGarageModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GarageModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/garage/{id}": {
            "get": {
                "description": "Get garage by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "garage"
                ],
                "summary": "Get garage by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Garage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GarageModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit garage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "garage"
                ],
                "summary": "Update a garage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Garage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Register garage",
                        "name": "garage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GarageModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GarageModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/garage_import": {
            "post": {
                "description": "Register garage (useful for importing data)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "garage"
                ],
                "summary": "Create many garage",
                "parameters": [
                    {
                        "description": "Register garage",
                        "name": "garage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GarageModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CreateGarageModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/garage_list": {
            "get": {
                "description": "List garage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "garage"
                ],
                "summary": "List garage",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order",
                        "name": "descending",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GarageModel"
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/owner": {
            "post": {
                "description": "Register owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owner"
                ],
                "summary": "Create a new owner",
                "parameters": [
                    {
                        "description": "Register owner",
                        "name": "owner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateOwnerModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OwnerModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/owner/{id}": {
            "get": {
                "description": "Get owner by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owner"
                ],
                "summary": "Get owner by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OwnerModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owner"
                ],
                "summary": "Update a owner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Register owner",
                        "name": "owner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OwnerModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OwnerModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/owner_import": {
            "post": {
                "description": "Register owner (useful for importing data)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owner"
                ],
                "summary": "Create many owner",
                "parameters": [
                    {
                        "description": "Register owner",
                        "name": "owner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OwnerModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CreateOwnerModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/owner_list": {
            "get": {
                "description": "List owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "owner"
                ],
                "summary": "List owner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order",
                        "name": "descending",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OwnerModel"
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/permission": {
            "post": {
                "description": "Register permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permission"
                ],
                "summary": "Create a new permission",
                "parameters": [
                    {
                        "description": "Register permission",
                        "name": "permission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreatePermissionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PermissionModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/permission/{id}": {
            "get": {
                "description": "Get permission by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permission"
                ],
                "summary": "Get permission by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PermissionModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permission"
                ],
                "summary": "Update a permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Register permission",
                        "name": "permission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PermissionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PermissionModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/permission_import": {
            "post": {
                "description": "Register permission (useful for importing data)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permission"
                ],
                "summary": "Create many permission",
                "parameters": [
                    {
                        "description": "Register permission",
                        "name": "permission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PermissionModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CreatePermissionModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/permission_list": {
            "get": {
                "description": "List permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permission"
                ],
                "summary": "List permission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order",
                        "name": "descending",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PermissionModel"
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/spare_part": {
            "post": {
                "description": "Register spare_part",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spare_part"
                ],
                "summary": "Create a new spare_part",
                "parameters": [
                    {
                        "description": "Register spare_part",
                        "name": "spare_part",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateSparePartModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SparePartModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/spare_part/{id}": {
            "get": {
                "description": "Get spare_part by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spare_part"
                ],
                "summary": "Get spare_part by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SparePart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SparePartModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit spare_part",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spare_part"
                ],
                "summary": "Update a spare_part",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SparePart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Register spare_part",
                        "name": "spare_part",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SparePartModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SparePartModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/spare_part_import": {
            "post": {
                "description": "Register spare_part (useful for importing data)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spare_part"
                ],
                "summary": "Create many spare_part",
                "parameters": [
                    {
                        "description": "Register spare_part",
                        "name": "spare_part",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SparePartModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CreateSparePartModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/spare_part_list": {
            "get": {
                "description": "List spare_part",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spare_part"
                ],
                "summary": "List spare_part",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order",
                        "name": "descending",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SparePartModel"
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/supplier": {
            "post": {
                "description": "Register supplier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supplier"
                ],
                "summary": "Create a new supplier",
                "parameters": [
                    {
                        "description": "Register supplier",
                        "name": "supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateSupplierModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SupplierModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/supplier/{id}": {
            "get": {
                "description": "Get supplier by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supplier"
                ],
                "summary": "Get supplier by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SupplierModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit supplier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supplier"
                ],
                "summary": "Update a supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Register supplier",
                        "name": "supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SupplierModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SupplierModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/supplier_import": {
            "post": {
                "description": "Register supplier (useful for importing data)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supplier"
                ],
                "summary": "Create many supplier",
                "parameters": [
                    {
                        "description": "Register supplier",
                        "name": "supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SupplierModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CreateSupplierModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/supplier_list": {
            "get": {
                "description": "List supplier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supplier"
                ],
                "summary": "List supplier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order",
                        "name": "descending",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SupplierModel"
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/vehicle": {
            "post": {
                "description": "Register vehicle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Create a new vehicle",
                "parameters": [
                    {
                        "description": "Register vehicle",
                        "name": "vehicle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateVehicleModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VehicleModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/vehicle/{id}": {
            "get": {
                "description": "Get vehicle by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Get vehicle by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vehicle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VehicleModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit vehicle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Update a vehicle",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vehicle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Register vehicle",
                        "name": "vehicle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VehicleModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VehicleModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/vehicle_import": {
            "post": {
                "description": "Register vehicle (useful for importing data)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Create many vehicle",
                "parameters": [
                    {
                        "description": "Register vehicle",
                        "name": "vehicle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.VehicleModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CreateVehicleModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/vehicle_list": {
            "get": {
                "description": "List vehicle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "List vehicle",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order",
                        "name": "descending",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.VehicleModel"
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/vehicles_seed": {
            "post": {
                "description": "Seed vehicles.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Seed vehicles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AccountModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "x-date": true
                },
                "email": {
                    "type": "string",
                    "x-nullable": false
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "x-nullable": false
                },
                "updated_at": {
                    "type": "string",
                    "x-date": true
                }
            }
        },
        "models.CreateAccountModel": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateGarageModel": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                }
            }
        },
        "models.CreateOwnerModel": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                }
            }
        },
        "models.CreatePermissionModel": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "models.CreateSparePartModel": {
            "type": "object",
            "properties": {
                "barcode": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "models.CreateSupplierModel": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateVehicleModel": {
            "type": "object",
            "properties": {
                "chrono": {
                    "type": "string"
                },
                "collection_date": {
                    "type": "string"
                },
                "commercial_name": {
                    "type": "string"
                },
                "current_status": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "expertise": {
                    "type": "boolean"
                },
                "first_circulation": {
                    "type": "string"
                },
                "info": {
                    "$ref": "#/definitions/models.InfoModel"
                },
                "mileage": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "procedure_ve": {
                    "type": "boolean"
                },
                "registration": {
                    "type": "string"
                },
                "serial_number": {
                    "type": "string"
                },
                "sold_at": {
                    "type": "string"
                }
            }
        },
        "models.GarageModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "x-date": true
                },
                "id": {
                    "type": "string"
                },
                "label": {
                    "type": "string",
                    "x-nullable": false
                },
                "updated_at": {
                    "type": "string",
                    "x-date": true
                }
            }
        },
        "models.InfoModel": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                }
            }
        },
        "models.OwnerModel": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "x-date": true
                },
                "email": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "x-nullable": true
                },
                "photo": {
                    "type": "string",
                    "x-nullable": true
                },
                "postal_code": {
                    "type": "string",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string",
                    "x-date": true
                }
            }
        },
        "models.PermissionModel": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "created_at": {
                    "type": "string",
                    "x-date": true
                },
                "id": {
                    "type": "string"
                },
                "label": {
                    "type": "string",
                    "x-nullable": false
                },
                "updated_at": {
                    "type": "string",
                    "x-date": true
                }
            }
        },
        "models.SparePartModel": {
            "type": "object",
            "properties": {
                "barcode": {
                    "type": "string",
                    "x-nullable": false
                },
                "created_at": {
                    "type": "string",
                    "x-date": true
                },
                "id": {
                    "type": "string"
                },
                "reference": {
                    "type": "string",
                    "x-nullable": false
                },
                "updated_at": {
                    "type": "string",
                    "x-date": true
                }
            }
        },
        "models.SupplierModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "x-date": true
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "x-nullable": false
                },
                "updated_at": {
                    "type": "string",
                    "x-date": true
                }
            }
        },
        "models.VehicleModel": {
            "type": "object",
            "properties": {
                "chrono": {
                    "type": "string",
                    "x-nullable": true
                },
                "collection_date": {
                    "type": "string",
                    "x-date": true,
                    "x-nullable": false
                },
                "commercial_name": {
                    "type": "string",
                    "x-nullable": false
                },
                "created_at": {
                    "type": "string",
                    "x-date": true
                },
                "current_status": {
                    "type": "string",
                    "x-nullable": true
                },
                "delivery_date": {
                    "type": "string",
                    "x-date": true,
                    "x-nullable": false
                },
                "expertise": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "first_circulation": {
                    "type": "string",
                    "x-date": true,
                    "x-nullable": false
                },
                "id": {
                    "type": "string"
                },
                "info": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.InfoModel"
                        }
                    ],
                    "x-nullable": false
                },
                "mileage": {
                    "type": "integer",
                    "x-nullable": false
                },
                "note": {
                    "type": "string",
                    "x-nullable": false
                },
                "owner_id": {
                    "type": "string",
                    "x-nullable": false
                },
                "procedure_ve": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "registration": {
                    "type": "string",
                    "x-nullable": false
                },
                "serial_number": {
                    "type": "string",
                    "x-nullable": false
                },
                "sold_at": {
                    "type": "string",
                    "x-date": true,
                    "x-nullable": false
                },
                "updated_at": {
                    "type": "string",
                    "x-date": true
                }
            }
        },
        "utils.ResponseError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}